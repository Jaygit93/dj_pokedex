services:
  django:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django_pokedex
    volumes:
      - .:/app:cached
      - cache-volume:/app/pokedex_project/cache
      - log-volume:/app/pokedex_project/logs
    environment:
      - PYTHONUNBUFFERED=1
      - DJANGO_SETTINGS_MODULE=pokedex_project.settings
      - PYTHONPATH=/app
      - PHP_IDE_CONFIG=serverName=docker
    working_dir: /app
    command: >
      sh -c "chmod +x wait-for-it.sh &&
         ./wait-for-it.sh mysql:3306 --timeout=30 --strict -- 
         gunicorn pokedex_project.wsgi:application --bind 0.0.0.0:8000"
    depends_on:
      - mysql
    expose:
      - "8000"
    networks:
      - app-network

  mysql:
    image: mysql:8.3
    container_name: mysql_pokedex
    environment:
      MYSQL_ROOT_PASSWORD: passroot
      MYSQL_DATABASE: pokedex
      MYSQL_USER: dexuser
      MYSQL_PASSWORD: passkedex
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin_pokedex
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: passroot
      UPLOAD_LIMIT: 8M
    ports:
      - "8087:80"
    depends_on:
      - mysql
    networks:
      - app-network

  nginx:
    image: nginx:stable
    container_name: nginx_pokedex
    ports:
      - "8072:80"
    depends_on:
      - django
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./staticfiles:/app/staticfiles  # Statics collectés           # Médias uploadés
    networks:
      - app-network

volumes:
  mysql-data:
  cache-volume:
  log-volume:

networks:
  app-network:
    driver: bridge